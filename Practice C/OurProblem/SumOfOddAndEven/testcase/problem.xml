<?xml version="1.0" encoding="utf-8" standalone="no"?>
<problem revision="4" short-name="loops-modulo" url="https://polygon.codeforces.com/p3Q9SrA/Jooo/loops-modulo">
    <names>
        <name language="english" value="Sum Of Odd and Even"/>
        <name language="thai" value="Sum Of Odd and Even"/>
    </names>
    <statements>
        <statement charset="UTF-8" language="english" mathjax="true" path="statements/english/problem.tex" type="application/x-tex"/>
        <statement charset="UTF-8" language="thai" mathjax="true" path="statements/thai/problem.tex" type="application/x-tex"/>
        <statement charset="UTF-8" language="english" mathjax="true" path="statements/.html/english/problem.html" type="text/html"/>
        <statement charset="UTF-8" language="thai" mathjax="true" path="statements/.html/thai/problem.html" type="text/html"/>
    </statements>
    <judging cpu-name="Intel(R) Core(TM) i3-8100 CPU @ 3.60GHz" cpu-speed="3600" input-file="" output-file="" run-count="1">
        <testset name="tests">
            <time-limit>1000</time-limit>
            <memory-limit>67108864</memory-limit>
            <test-count>20</test-count>
            <input-path-pattern>tests/%02d</input-path-pattern>
            <answer-path-pattern>tests/%02d.a</answer-path-pattern>
            <tests>
                <test cmd="gen 3" method="generated" sample="true"/>
                <test cmd="gen 5" method="generated" sample="true"/>
                <test cmd="gen 10" method="generated"/>
                <test cmd="gen 10000 doafijpanmz" method="generated"/>
                <test cmd="gen 10000 nbnm" method="generated"/>
                <test cmd="gen 10000 Plurm" method="generated"/>
                <test cmd="gen 10000 Win" method="generated"/>
                <test cmd="gen 10000 adsfsdafahggfj" method="generated"/>
                <test cmd="gen 10000 12345" method="generated"/>
                <test cmd="gen 10000 xvbvxcbxsfgs" method="generated"/>
                <test cmd="gen 10000 sdfgreytutru" method="generated"/>
                <test cmd="gen 10000 zcvz" method="generated"/>
                <test cmd="gen 10000 Jom" method="generated"/>
                <test cmd="gen 10000 etretret" method="generated"/>
                <test cmd="gen 10000 jkjgkjhgk" method="generated"/>
                <test cmd="gen 10000 bnvcncvb" method="generated"/>
                <test cmd="gen 10000 ytrurt" method="generated"/>
                <test cmd="gen 10000 poiyk" method="generated"/>
                <test cmd="gen 10000 nbvcnbcv5" method="generated"/>
                <test cmd="gen 10000 afsadkjf" method="generated"/>
            </tests>
        </testset>
    </judging>
    <files>
        <resources>
            <file path="files/olymp.sty"/>
            <file path="files/problem.tex"/>
            <file path="files/statements.ftl"/>
            <file path="files/testlib.h" type="h.g++"/>
            <file path="files/tutorial.tex"/>
        </resources>
        <executables>
            <executable>
                <source path="files/gen.cpp" type="cpp.g++17"/>
                <binary path="files/gen.exe" type="exe.win32"/>
            </executable>
            <executable>
                <source path="files/valid.cpp" type="cpp.g++17"/>
                <binary path="files/valid.exe" type="exe.win32"/>
            </executable>
        </executables>
    </files>
    <assets>
        <checker name="std::wcmp.cpp" type="testlib">
            <source path="files/check.cpp" type="cpp.g++17"/>
            <binary path="check.exe" type="exe.win32"/>
            <copy path="check.cpp"/>
            <testset>
                <test-count>0</test-count>
                <input-path-pattern>files/tests/checker-tests/%02d</input-path-pattern>
                <output-path-pattern>files/tests/checker-tests/%02d.o</output-path-pattern>
                <answer-path-pattern>files/tests/checker-tests/%02d.a</answer-path-pattern>
                <tests/>
            </testset>
        </checker>
        <validators>
            <validator>
                <source path="files/valid.cpp" type="cpp.g++17"/>
                <binary path="files/valid.exe" type="exe.win32"/>
                <testset>
                    <test-count>1</test-count>
                    <input-path-pattern>files/tests/validator-tests/%02d</input-path-pattern>
                    <tests>
                        <test verdict="valid"/>
                    </tests>
                </testset>
            </validator>
        </validators>
        <solutions>
            <solution tag="main">
                <source path="solutions/sol.cpp" type="cpp.g++17"/>
                <binary path="solutions/sol.exe" type="exe.win32"/>
            </solution>
        </solutions>
    </assets>
    <properties>
        <property name="tests-wellformed" value="true"/>
    </properties>
    <stresses>
        <stress-count>1</stress-count>
        <stress-path-pattern>stresses/%03d</stress-path-pattern>
        <list>
            <stress index="1" path="stresses/001"/>
        </list>
    </stresses>
    <tags>
        <tag value="loops"/>
        <tag value="modulo"/>
    </tags>
</problem>
